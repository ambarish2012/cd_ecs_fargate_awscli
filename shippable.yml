resources:
# Automation scripts repo
  - name: cd_ecs_fargate_repo
    type: gitRepo
    integration: "drship_github"
    versionTemplate:
      sourceName: "ambarish2012/cd_ecs_fargate_awscli"
      branch: master

# AWS credentials
  - name: cd_ecs_fargate_creds
    type: integration
    integration: "drship_aws"

jobs:
  - name: deploy_app_ecs_fargate
    type: runSh
    steps:
      - IN: node_app_img_dh # defined here https://github.com/devops-recipes/node_app/blob/master/shippable.yml
      - IN: cd_ecs_fargate_repo
        switch: off
      - IN: cd_ecs_fargate_creds
        switch: off
      - TASK:
          name: deploy_app
          runtime:
            options:
              env:
                - CLUSTER_NAME: "deploy-ecs-fargate"
                - SERVICE_NAME: "node_app_service"
                - FAMILY: "ecs_fargate_task"
                - CPU: 1024
                - MEMORY: 2048
                - SUBNET_ID: "subnet-34378e50"
                - SECURITY_GROUP_ID: "sg-a23ee1d0"
                - AWS_REGION: "us-east-1"
          script:
            - REPO_DIR=$(shipctl get_resource_state "cd_ecs_fargate_repo")
            - pushd $REPO_DIR/specs
            - aws configure set aws_access_key_id $(shipctl get_integration_resource_field cd_ecs_fargate_creds "accessKey")
            - aws configure set aws_secret_access_key $(shipctl get_integration_resource_field cd_ecs_fargate_creds "secretKey")
            - aws configure set default.region ${AWS_REGION}
            - export APP_IMG=$(shipctl get_resource_version_key node_app_img_dh sourceName)
            - export APP_TAG=$(shipctl get_resource_version_name node_app_img_dh)
            - shipctl replace taskdefinition.json servicedefinition.json
            - cat servicedefinition.json
            - aws ecs create-cluster --cluster-name ${CLUSTER_NAME}
            - aws ecs register-task-definition --cli-input-json file://${REPO_DIR}/specs/taskdefinition.json > output.json
            - export REVISION=$(cat output.json | jq '.taskDefinition.revision')
            - echo "Task definition revision:"$REVISION
            - popd
            - $REPO_DIR/utilities/delete_existing_ecs_service.sh ${CLUSTER_NAME} ${SERVICE_NAME}
            - aws ecs create-service --service-name ${SERVICE_NAME} --cli-input-json file://${REPO_DIR}/specs/servicedefinition.json"
            - aws ecs list-services --cluster ${CLUSTER_NAME}
            - aws ecs describe-services --cluster ${CLUSTER_NAME} --service ${SERVICE_NAME}
    flags:
      - cd
      - awscli
      - fargate
